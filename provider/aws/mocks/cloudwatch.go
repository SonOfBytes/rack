// Automatically generated by MockGen. DO NOT EDIT!
// Source: vendor/github.com/aws/aws-sdk-go/service/cloudwatch/cloudwatchiface/interface.go

package mocks

import (
	request "github.com/aws/aws-sdk-go/aws/request"
	cloudwatch "github.com/aws/aws-sdk-go/service/cloudwatch"
	gomock "github.com/golang/mock/gomock"
)

// Mock of CloudWatchAPI interface
type MockCloudWatchAPI struct {
	ctrl     *gomock.Controller
	recorder *_MockCloudWatchAPIRecorder
}

// Recorder for MockCloudWatchAPI (not exported)
type _MockCloudWatchAPIRecorder struct {
	mock *MockCloudWatchAPI
}

func NewMockCloudWatchAPI(ctrl *gomock.Controller) *MockCloudWatchAPI {
	mock := &MockCloudWatchAPI{ctrl: ctrl}
	mock.recorder = &_MockCloudWatchAPIRecorder{mock}
	return mock
}

func (_m *MockCloudWatchAPI) EXPECT() *_MockCloudWatchAPIRecorder {
	return _m.recorder
}

func (_m *MockCloudWatchAPI) DeleteAlarmsRequest(_param0 *cloudwatch.DeleteAlarmsInput) (*request.Request, *cloudwatch.DeleteAlarmsOutput) {
	ret := _m.ctrl.Call(_m, "DeleteAlarmsRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*cloudwatch.DeleteAlarmsOutput)
	return ret0, ret1
}

func (_mr *_MockCloudWatchAPIRecorder) DeleteAlarmsRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DeleteAlarmsRequest", arg0)
}

func (_m *MockCloudWatchAPI) DeleteAlarms(_param0 *cloudwatch.DeleteAlarmsInput) (*cloudwatch.DeleteAlarmsOutput, error) {
	ret := _m.ctrl.Call(_m, "DeleteAlarms", _param0)
	ret0, _ := ret[0].(*cloudwatch.DeleteAlarmsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockCloudWatchAPIRecorder) DeleteAlarms(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DeleteAlarms", arg0)
}

func (_m *MockCloudWatchAPI) DescribeAlarmHistoryRequest(_param0 *cloudwatch.DescribeAlarmHistoryInput) (*request.Request, *cloudwatch.DescribeAlarmHistoryOutput) {
	ret := _m.ctrl.Call(_m, "DescribeAlarmHistoryRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*cloudwatch.DescribeAlarmHistoryOutput)
	return ret0, ret1
}

func (_mr *_MockCloudWatchAPIRecorder) DescribeAlarmHistoryRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DescribeAlarmHistoryRequest", arg0)
}

func (_m *MockCloudWatchAPI) DescribeAlarmHistory(_param0 *cloudwatch.DescribeAlarmHistoryInput) (*cloudwatch.DescribeAlarmHistoryOutput, error) {
	ret := _m.ctrl.Call(_m, "DescribeAlarmHistory", _param0)
	ret0, _ := ret[0].(*cloudwatch.DescribeAlarmHistoryOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockCloudWatchAPIRecorder) DescribeAlarmHistory(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DescribeAlarmHistory", arg0)
}

func (_m *MockCloudWatchAPI) DescribeAlarmHistoryPages(_param0 *cloudwatch.DescribeAlarmHistoryInput, _param1 func(*cloudwatch.DescribeAlarmHistoryOutput, bool) bool) error {
	ret := _m.ctrl.Call(_m, "DescribeAlarmHistoryPages", _param0, _param1)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockCloudWatchAPIRecorder) DescribeAlarmHistoryPages(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DescribeAlarmHistoryPages", arg0, arg1)
}

func (_m *MockCloudWatchAPI) DescribeAlarmsRequest(_param0 *cloudwatch.DescribeAlarmsInput) (*request.Request, *cloudwatch.DescribeAlarmsOutput) {
	ret := _m.ctrl.Call(_m, "DescribeAlarmsRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*cloudwatch.DescribeAlarmsOutput)
	return ret0, ret1
}

func (_mr *_MockCloudWatchAPIRecorder) DescribeAlarmsRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DescribeAlarmsRequest", arg0)
}

func (_m *MockCloudWatchAPI) DescribeAlarms(_param0 *cloudwatch.DescribeAlarmsInput) (*cloudwatch.DescribeAlarmsOutput, error) {
	ret := _m.ctrl.Call(_m, "DescribeAlarms", _param0)
	ret0, _ := ret[0].(*cloudwatch.DescribeAlarmsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockCloudWatchAPIRecorder) DescribeAlarms(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DescribeAlarms", arg0)
}

func (_m *MockCloudWatchAPI) DescribeAlarmsPages(_param0 *cloudwatch.DescribeAlarmsInput, _param1 func(*cloudwatch.DescribeAlarmsOutput, bool) bool) error {
	ret := _m.ctrl.Call(_m, "DescribeAlarmsPages", _param0, _param1)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockCloudWatchAPIRecorder) DescribeAlarmsPages(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DescribeAlarmsPages", arg0, arg1)
}

func (_m *MockCloudWatchAPI) DescribeAlarmsForMetricRequest(_param0 *cloudwatch.DescribeAlarmsForMetricInput) (*request.Request, *cloudwatch.DescribeAlarmsForMetricOutput) {
	ret := _m.ctrl.Call(_m, "DescribeAlarmsForMetricRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*cloudwatch.DescribeAlarmsForMetricOutput)
	return ret0, ret1
}

func (_mr *_MockCloudWatchAPIRecorder) DescribeAlarmsForMetricRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DescribeAlarmsForMetricRequest", arg0)
}

func (_m *MockCloudWatchAPI) DescribeAlarmsForMetric(_param0 *cloudwatch.DescribeAlarmsForMetricInput) (*cloudwatch.DescribeAlarmsForMetricOutput, error) {
	ret := _m.ctrl.Call(_m, "DescribeAlarmsForMetric", _param0)
	ret0, _ := ret[0].(*cloudwatch.DescribeAlarmsForMetricOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockCloudWatchAPIRecorder) DescribeAlarmsForMetric(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DescribeAlarmsForMetric", arg0)
}

func (_m *MockCloudWatchAPI) DisableAlarmActionsRequest(_param0 *cloudwatch.DisableAlarmActionsInput) (*request.Request, *cloudwatch.DisableAlarmActionsOutput) {
	ret := _m.ctrl.Call(_m, "DisableAlarmActionsRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*cloudwatch.DisableAlarmActionsOutput)
	return ret0, ret1
}

func (_mr *_MockCloudWatchAPIRecorder) DisableAlarmActionsRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DisableAlarmActionsRequest", arg0)
}

func (_m *MockCloudWatchAPI) DisableAlarmActions(_param0 *cloudwatch.DisableAlarmActionsInput) (*cloudwatch.DisableAlarmActionsOutput, error) {
	ret := _m.ctrl.Call(_m, "DisableAlarmActions", _param0)
	ret0, _ := ret[0].(*cloudwatch.DisableAlarmActionsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockCloudWatchAPIRecorder) DisableAlarmActions(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "DisableAlarmActions", arg0)
}

func (_m *MockCloudWatchAPI) EnableAlarmActionsRequest(_param0 *cloudwatch.EnableAlarmActionsInput) (*request.Request, *cloudwatch.EnableAlarmActionsOutput) {
	ret := _m.ctrl.Call(_m, "EnableAlarmActionsRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*cloudwatch.EnableAlarmActionsOutput)
	return ret0, ret1
}

func (_mr *_MockCloudWatchAPIRecorder) EnableAlarmActionsRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "EnableAlarmActionsRequest", arg0)
}

func (_m *MockCloudWatchAPI) EnableAlarmActions(_param0 *cloudwatch.EnableAlarmActionsInput) (*cloudwatch.EnableAlarmActionsOutput, error) {
	ret := _m.ctrl.Call(_m, "EnableAlarmActions", _param0)
	ret0, _ := ret[0].(*cloudwatch.EnableAlarmActionsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockCloudWatchAPIRecorder) EnableAlarmActions(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "EnableAlarmActions", arg0)
}

func (_m *MockCloudWatchAPI) GetMetricStatisticsRequest(_param0 *cloudwatch.GetMetricStatisticsInput) (*request.Request, *cloudwatch.GetMetricStatisticsOutput) {
	ret := _m.ctrl.Call(_m, "GetMetricStatisticsRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*cloudwatch.GetMetricStatisticsOutput)
	return ret0, ret1
}

func (_mr *_MockCloudWatchAPIRecorder) GetMetricStatisticsRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetMetricStatisticsRequest", arg0)
}

func (_m *MockCloudWatchAPI) GetMetricStatistics(_param0 *cloudwatch.GetMetricStatisticsInput) (*cloudwatch.GetMetricStatisticsOutput, error) {
	ret := _m.ctrl.Call(_m, "GetMetricStatistics", _param0)
	ret0, _ := ret[0].(*cloudwatch.GetMetricStatisticsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockCloudWatchAPIRecorder) GetMetricStatistics(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "GetMetricStatistics", arg0)
}

func (_m *MockCloudWatchAPI) ListMetricsRequest(_param0 *cloudwatch.ListMetricsInput) (*request.Request, *cloudwatch.ListMetricsOutput) {
	ret := _m.ctrl.Call(_m, "ListMetricsRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*cloudwatch.ListMetricsOutput)
	return ret0, ret1
}

func (_mr *_MockCloudWatchAPIRecorder) ListMetricsRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ListMetricsRequest", arg0)
}

func (_m *MockCloudWatchAPI) ListMetrics(_param0 *cloudwatch.ListMetricsInput) (*cloudwatch.ListMetricsOutput, error) {
	ret := _m.ctrl.Call(_m, "ListMetrics", _param0)
	ret0, _ := ret[0].(*cloudwatch.ListMetricsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockCloudWatchAPIRecorder) ListMetrics(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ListMetrics", arg0)
}

func (_m *MockCloudWatchAPI) ListMetricsPages(_param0 *cloudwatch.ListMetricsInput, _param1 func(*cloudwatch.ListMetricsOutput, bool) bool) error {
	ret := _m.ctrl.Call(_m, "ListMetricsPages", _param0, _param1)
	ret0, _ := ret[0].(error)
	return ret0
}

func (_mr *_MockCloudWatchAPIRecorder) ListMetricsPages(arg0, arg1 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "ListMetricsPages", arg0, arg1)
}

func (_m *MockCloudWatchAPI) PutMetricAlarmRequest(_param0 *cloudwatch.PutMetricAlarmInput) (*request.Request, *cloudwatch.PutMetricAlarmOutput) {
	ret := _m.ctrl.Call(_m, "PutMetricAlarmRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*cloudwatch.PutMetricAlarmOutput)
	return ret0, ret1
}

func (_mr *_MockCloudWatchAPIRecorder) PutMetricAlarmRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "PutMetricAlarmRequest", arg0)
}

func (_m *MockCloudWatchAPI) PutMetricAlarm(_param0 *cloudwatch.PutMetricAlarmInput) (*cloudwatch.PutMetricAlarmOutput, error) {
	ret := _m.ctrl.Call(_m, "PutMetricAlarm", _param0)
	ret0, _ := ret[0].(*cloudwatch.PutMetricAlarmOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockCloudWatchAPIRecorder) PutMetricAlarm(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "PutMetricAlarm", arg0)
}

func (_m *MockCloudWatchAPI) PutMetricDataRequest(_param0 *cloudwatch.PutMetricDataInput) (*request.Request, *cloudwatch.PutMetricDataOutput) {
	ret := _m.ctrl.Call(_m, "PutMetricDataRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*cloudwatch.PutMetricDataOutput)
	return ret0, ret1
}

func (_mr *_MockCloudWatchAPIRecorder) PutMetricDataRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "PutMetricDataRequest", arg0)
}

func (_m *MockCloudWatchAPI) PutMetricData(_param0 *cloudwatch.PutMetricDataInput) (*cloudwatch.PutMetricDataOutput, error) {
	ret := _m.ctrl.Call(_m, "PutMetricData", _param0)
	ret0, _ := ret[0].(*cloudwatch.PutMetricDataOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockCloudWatchAPIRecorder) PutMetricData(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "PutMetricData", arg0)
}

func (_m *MockCloudWatchAPI) SetAlarmStateRequest(_param0 *cloudwatch.SetAlarmStateInput) (*request.Request, *cloudwatch.SetAlarmStateOutput) {
	ret := _m.ctrl.Call(_m, "SetAlarmStateRequest", _param0)
	ret0, _ := ret[0].(*request.Request)
	ret1, _ := ret[1].(*cloudwatch.SetAlarmStateOutput)
	return ret0, ret1
}

func (_mr *_MockCloudWatchAPIRecorder) SetAlarmStateRequest(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "SetAlarmStateRequest", arg0)
}

func (_m *MockCloudWatchAPI) SetAlarmState(_param0 *cloudwatch.SetAlarmStateInput) (*cloudwatch.SetAlarmStateOutput, error) {
	ret := _m.ctrl.Call(_m, "SetAlarmState", _param0)
	ret0, _ := ret[0].(*cloudwatch.SetAlarmStateOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockCloudWatchAPIRecorder) SetAlarmState(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "SetAlarmState", arg0)
}
